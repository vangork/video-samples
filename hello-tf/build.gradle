/*
 * Copyright (c) 2019 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */

plugins {
    id 'com.github.johnrengelman.shadow'
}

apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"

group = "io.pravega.example"
version = samplesVersion
archivesBaseName = "hello-tf"
description = "hello tensorflow"
mainClassName = "io.pravega.example.HelloTF"
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile project(':common')

    compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.tensorflow:tensorflow:${tensorflowVersion}"
    compile "io.pravega:pravega-connectors-flink-${flinkShortVersion}_${flinkScalaVersion}:${pravegaFlinkConnectorVersion}"

    implementation "org.apache.flink:flink-clients_${flinkScalaVersion}:${flinkVersion}"

    if (enableGPU.toBoolean()) {
        compile group: 'org.tensorflow', name: 'libtensorflow_jni_gpu', version: tensorflowVersion
    }

    if (includePravegaCredentials.toBoolean()) {
        compile "io.pravega:pravega-keycloak-client:${pravegaCredentialsVersion}"
    }
}

shadowJar {
    dependencies {
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency("org.scala-lang:scala-compiler"))
    }

    classifier = ""
    zip64 true
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into("lib") {
                from jar
                from(project.configurations.runtime)
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username "$System.env.MAVEN_USERNAME"
                password "$System.env.MAVEN_PASSWORD"
            }
            url "$System.env.MAVEN_URL"
        }
    }

    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}
