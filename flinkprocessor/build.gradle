/*
 * Copyright (c) 2019 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */


apply plugin: "distribution"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"
apply plugin: "com.github.johnrengelman.shadow"

group = "io.pravega.example.video"
version = samplesVersion
archivesBaseName = "video-flinkprocessor"
description = "video-flinkprocessor"
// The default main class.
mainClassName =  "io.pravega.example.videoprocessor.FlinkVideoReaderJob"
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile project(':common')

    compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"
    compile "io.pravega:pravega-connectors-flink-${flinkShortVersion}_${flinkScalaVersion}:${pravegaFlinkConnectorVersion}"
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-scala_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-json:${flinkVersion}"
    compile "io.pravega:pravega-client:${pravegaVersion}"
    compile "com.github.vladimir-bukhtoyarov:bucket4j-core:${bucket4jVersion}"

    if (includePravegaCredentials.toBoolean()) {
        compile "io.pravega:pravega-keycloak-client:${pravegaCredentialsVersion}"
    }    

    testCompile "junit:junit:${junitVersion}"
}

shadowJar {
    dependencies {
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency("org.scala-lang:scala-compiler"))
    }

    classifier = ""
    zip64 true
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into("lib") {
                from shadowJar
                from(project.configurations.shadow)
            }
        }
    }
}

//publishing {
//    repositories {
//        maven {
//            credentials {
//                username "$System.env.MAVEN_USERNAME"
//                password "$System.env.MAVEN_PASSWORD"
//            }
//            url "$System.env.MAVEN_URL"
//        }
//    }
//
//    publications {
//        shadow(MavenPublication) { publication ->
//            project.shadow.component(publication)
//        }
//    }
//}
